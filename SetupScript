#!/bin/bash

mkdir include lib doc src data &&
mkdir src/main && touch src/main/main.cpp &&
mkdir src/class &&

if [ "$1" !=  '' ]
then
echo "
#include \"../../include/$1.class.hpp\"


$1::$1(){}
$1::$1(const $1&){}
$1::~$1(){}

$1& operator = (const $1& e){}

" >> "src/class/$1.class.cpp" &&

echo "
#pragma once

class $1 {
	public:

		$1();
		$1(const $1&);
		~$1();

		$1& operator = (const $1& e);

	private:

};" >> "include/$1.class.hpp"
fi
if [ "$2" != '' ]
then
echo "
#include \"../../include/$2.class.hpp\"


$2::$2(){}
$2::$2(const $2&){}
$2::~$2(){}

$2& operator = (const $2& e){}

" >> "src/class/$2.class.cpp" &&
echo "
#pragma once

class $2 {
	public:

		$2();
		$2(const $2&);
		~$2();

		$2& operator = (const $2& e);

	private:

};" >> "include/$2.class.hpp"
fi

if [ "$3" != '' ]
then
echo "#include \"../../include/$3.class.hpp\"


$3::$3(){}
$3::$3(const $3&){}
$3::~$3(){}

$3& operator = (const $3& e){}

" >> "src/class/$3.class.cpp" &&
echo "
#pragma once

class $3 {
	public:

		$3();
		$3(const $3&);
		~$3();

		$3& operator = (const $3& e);

	private:

};" >> "include/$3.class.hpp"
fi

if [ "$4" != '' ]
then
echo "
#include \"../../include/$4.class.hpp\"


$4::$4(){}
$4::$4(const $&){}
$4::~$4(){}

$4& operator = (const $4& e){}

" >> "src/class/$4.class.cpp" &&
echo "
#pragma once

class $4 {
	public:

		$4();
		$a(const $4&);
		~$4();

		$4& operator = (const $4& e);

	private:

};" >> "include/$4.class.hpp"
fi

cp ~/42/42MakefileTemplate.cpp/Makefile ./Makefile &&
make setup &&
find "." -name .git -prune -o -type d -empty -exec  touch {}/.gitignore \;
